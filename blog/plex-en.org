#+TITLE: From DVD, to Pi, to Plex
#+DATE: 2020-04-11
#+AUTHOR: Colin
#+CATEGORY: tech

This post describes my home media setup. Namely, how I rip and encode DVDs that
I own using *Handbrake*, store them on a *Raspberry Pi* running *Plex*, and play
them on my (Sharp) *Roku TV*. My encoding settings, media types, and subtitle
formats are all chosen to avoid live *Transcoding* by Plex during playback, and
allow reasonably high video quality.

* Extracting Media from DVDs

I could never manage to convince my Chromecast to handle multiple audio and
subtitle tracks correctly. Plex can handle these without issue, all while
avoiding Transcoding if we set everything up correctly.

One aspect of this is subtitle type. It seems that keeping all subtitles as
external ~.srt~ files is best, as this allows:

- Plex to avoid "subtitle burn-in", which causes live Transcoding.
- a better look to the subtitles while watching, since clients can freely
  manipulate text.
- the ability to add new subtitles whenever we want, just by coping a file.
- the ability to freely edit your own subtitles.

A note on [[https://www.opensubtitles.org][opensubtitles.org]]: /Yes/ it's possible to get loads of ~.srt~ files
for free there. However, they're not guaranteed to have the exact timing that
your particular DVD expects. So I personally think it's safest to use the
subtitles supplied by the DVD itself.

** "Lossless" Extraction of DVD Content

*You'll need:* ~makemkv~ and ~ccextractor~.

I use the ~makemkv~ tool. This pulls everything off of your DVD and wraps it in
the ~.mkv~ container type. Nothing is reencoded, so you're getting the content
as-is. The movie file itself will also be quite large, usually more than 5gb. It
will also almost certainly not be in a Plex-friendly encoding, so once we've
extracted the subtitles, we'll use Handbrake to reencode.

We perform this step first instead of jumping straight to Handbrake in order to
move past one bottleneck of our pipeline: the IO cost of getting the data off
the DVD. The later Handbrake processes will be much faster this way.

Steps:

- Open the ~makemkv~ GUI. If you have a DVD in a drive, it will be
  automatically detected.
- Before anything else, do ~which ccextractor~ in your terminal, and enter this
  full path in ~View -> Preferences -> Advanced~. You'll only need to do this
  once.
- Click the drive image to "open" the DVD. This will take a few minutes.

[[/assets/images/makemkv-drive.png]]

- After excluding tracks for trailers / bonus content, click ~Make MKV~ to save
  the DVD contents to your computer. This will take about 30 minutes.

[[/assets/images/makemkv-commit.png]]

** Subtitle Extraction

*You'll need:* ~mkvinfo~ and ~mkvextract~, both from the ~mkvtoolnix~ package.

We're looking to create an ~.srt~ file from what's available in the DVD. If
we're lucky, it will provide one for us. Otherwise we'll need to do some
conversion.

Extraction itself is easy. Let's first identify where the subtitles "are":

#+begin_example
  mkvinfo the-movie.mvk
#+end_example

*** SRT

~mkvinfo~ will spit out a lot of information, but let's look for ~Track type:
subtitles~. We're in luck if we see something like this:

#+begin_example
| + Track
|  + Track number: 9 (track ID for mkvmerge & mkvextract: 8)
|  + Track UID: 9
|  + Track type: subtitles
|  + Default track flag: 0
|  + Lacing flag: 0
|  + Codec ID: S_TEXT/UTF8
|  + Language: eng
#+end_example

Notice the ~S_TEXT/UTF8~. This subtitle is already an ~.srt~, so let's grab it:

#+begin_example
  > mkvextract tracks the-movie.mkv 8:the-movie.en.srt
  Extracting track 8 with the CodecID 'S_TEXT/UTF8' to the file 'the-movie.en.srt'. Container format: SRT text subtitles
#+end_example

We can then check the output to see if it's what we expect:

#+begin_example
  > head the-movie.en.srt
  1
  00:00:27,044 --> 00:00:31,947
  ♪

  2
  00:02:57,227 --> 00:02:59,527
  EXCUSE ME.

  3
  00:03:02,099 --> 00:03:05,167
#+end_example

Looks good.

*** VOBSUB, then SRT

If we found no ~S_TEXT/UTF8~ entries, then we're stuck with VOBSUB, which is an
image-based format. If used with Plex, it will force a Transcoding, so we'll
convert it first. ~mkvinfo~ would show us something like:

#+begin_example
  | + Track
  |  + Track number: 6 (track ID for mkvmerge & mkvextract: 5)
  |  + Track UID: 6
  |  + Track type: subtitles
  |  + Default track flag: 0
  |  + Lacing flag: 0
  |  + Codec ID: S_VOBSUB
  |  + Language: eng
  |  + Codec's private data: size 511
#+end_example

#+begin_example
  > mkvextract tracks the-movie.mkv 5:the-movie.en.sub
  Extracting track 5 with the CodecID 'S_VOBSUB' to the file 'the-movie.en.sub'. Container format: VobSubs
  Writing the VobSub index file 'the-movie.en.idx'.
#+end_example

Notice that it produces a ~.idx~ as well. Take both these files and visit
[[https://subtitletools.com/convert-sub-idx-to-srt-online][subtitletools.com]]. Upload the files and wait for the conversion to complete. You
now have your ~.srt~! Note that you may have to make minor corrections yourself,
where the image-to-text translation software misread the words.

** Reencoding via Handbrake

*You'll need:* [[https://handbrake.fr/][Handbrake]].

Now for the fun part. Handbrake will take our "lossless" ~.mkv~ file, and with
the settings I provide below, will reduce it to between 1gb and 2gb without
significant quality loss. Further, its video and audio formats will be what Plex
needs to avoid Transcoding.

*** Preset

I choose the ~H.264 MKV 1080p30~ preset as a starting point.

[[/assets/images/handbrake-preset.png]]

*** Video

The best way to avoid "fuzziness" in the resulting video is to stay as true as
possible to the original data. Respecting the original frame rate has a big
effect on this. Then, to increase quality overall, we reduce the ~RF~ and set
our encoding speed to ~Slow~. Leave everything else as the default values.

[[/assets/images/handbrake-video.png]]

*** Audio

Audio is where we have to be careful. Here are the golden rules:

- Plex will never Direct Play if you have more than one audio track. No, this is
  not the MKV's fault. It will /Direct Stream/ instead, which isn't as bad as
  full live Transcoding, but is still limiting.
- If you /force/ Direct Play in your settings, you can't control which audio
  track gets selected. It will play whichever audio track appears first as
  determined by the original DVD.
- If your DVD came with AC3 *5.1* audio, then Plex can Direct Play this and we
  don't need to reencode.
- If your DVD came with any other AC3 audio, then we /do/ need to convert it, as
  shown below.

[[/assets/images/handbrake-audio.png]]

or

[[/assets/images/handbrake-audio2.png]]

*** Subtitles

Since we're going to use external ~.srt~ files only, let's make sure we aren't
wasting time with Handbrake's default language scan:

[[/assets/images/handbrake-subtitles.png]]

*** Metadata

To help Plex, we should set some metadata tags as well. If we don't set at least
the title, the movie listing will display quite strangely in your Plex library.

[[/assets/images/handbrake-tags.png]]

After setting the output file name, we can hit ~Start~ to begin the encoding.
This will take about an hour, which is worth it for the quality of video you get
at the end. Waiting one hour once is better than rushing it, making mistakes,
and needing to repeat the process.

* Plex on a Pi

This section assumes you have a Raspberry Pi running Raspbian. You will need to
have enabled ~ssh~ access in your settings, and you'll need to know the internal
IP address of the Pi (check on your router's admin page). For serving media
optimally, it's best if your Pi has a wired connection to your router. It's also
assumed that you have an external hard drive for your media. It's *not*
recommended to use the Pi's SD card for storing media.

** Installing Plex

To install Plex on a Pi, follow the ~Preparing your Pi for Plex~ and ~Installing
Plex to your Raspberry Pi~ sections of [[https://pimylifeup.com/raspberry-pi-plex-server/][this guide]]. My sections below handle
drive permissions, which are often a problem.

Consider also installing ~htop~. We can then confirm that our Plex server is
running as we expect:

[[/assets/images/plex-htop.jpg]]

** Mounting your External Drive

Debian is convenient, in that it mounts drives for you as soon as you attach
them. Unfortunately, it does so as the ~pi~ user. Our Plex server is running as
the ~plex~ user, and needs full access to the drive.

First, let's find out where the drive is mounted. Let's ~ssh~ in:

#+begin_example
ssh pi@192.168.0.<YOURPI>
#+end_example

Perform this command, and then attach your drive:

#+begin_example
watch -n 1 "dmesg | tail -n 25"
#+end_example

[[/assets/images/plex-sda1.jpg]]

Ah ha. Unmounting is easy: the device should appear in ~/media/pi/~ already for
us.

#+begin_example
sudo umount /meda/pi/<YOURDEVICE>
#+end_example

Now let's remount it in a way that gives ~plex~ access:

#+begin_example
sudo mount /dev/sda1 /media/plex/ -o umask=000
#+end_example

You will have to repeat this process whenever you restart your Raspberry Pi.

** Directory Layout

Plex likes having your media categories separated. Here is how I split mine:

#+begin_example
pi@plexpi /m/plex> pwd
/media/plex
pi@plexpi /m/plex> tree -L 1
.
├── anime
├── movies
├── music
├── podcasts
└── shows
#+end_example

For files with subtitles, I like to give them their own subfolder (e.g.
~movies/Hero/~) as well, although this isn't strictly necessary.

** Adding Libraries

Within Plex Web, visit ~Settings~ and go here:

[[/assets/images/plex-libraries.jpg]]

Click ~Add Library~ and follow the prompts. Your library for "Movies" would live
in ~/media/plex/movies/~, for example.

** Copying Files to your External Drive

Naturally, you can detach the drive from your Pi and copy files to it from your
main computer yourself. Or, if you don't want any Plex downtime, you can use
~scp~ to copy over the files you created in Handbrake:

#+begin_example
scp Hero.mkv pi@192.168.0.<YOURPI>:/media/plex/movies
#+end_example

As soon as the copy is finished, Plex will detect the change and automatically
update your Library. You should copy up your subtitles files in the same way,
perhaps putting them in a subfolder with their video. *Plex requires that they
have the exact same base name as the video* they belong to, along with the
language code. In the case of ~Hero~, this would be ~Hero.en.srt~ for English
subtitles.

* Playback

We're almost there. Once we've confirmed a few final settings, we're free to
enjoy our media!

** Plex Server Remote Settings

Confirm these settings.

[[/assets/images/plex-remote.jpg]]

** Plex Web Quality

Confirm these settings.

[[/assets/images/plex-quality.jpg]]

** Roku Plex App

These are settings within the Plex app on your TV.

*** Quality

Quality can be maximum, since you're at home on the same network as the Pi.

[[/assets/images/roku-quality.jpeg]]

*** Subtitles

To make sure Plex doesn't get to excited and burn-in your subtitles even when it
doesn't have to, we make sure this is set:

[[/assets/images/roku-subtitles.jpeg]]

* Conclusion

And that's it! Hopefully this guide will help you set up Plex and get media onto
it efficiently, so that you, your friends, and your family can benefit from it.

I highly recommend getting a Plex Pass as well. The two biggest features that it
unlocks for me are *Media Downloading* to your devices and a *Dashboard* that you
can access in Plex Web, so that you don't need to ~ssh~ into your PR to monitor
its health.

Happy streaming!

* FAQ

** How much can a Raspberry Pi handle?

*Direct Play* invokes essentially no CPU overhead, which is why all my settings
above optimize for that. However, if something must be transcoded, my Raspberry
Pi 4 (4 CPUs, 4gb RAM) can reliably handle one video at a time without any
issues (buffering, etc.) on the client end.

** Why is Plex transcoding!?

It seems everyone who runs a Plex Server hits this mystery. If you've followed
my guide so far, then in theory your videos should never Transcode. If they are
anyway, here are all the triggers I've discovered, and what I do to work around
them:

- Plex doesn't like the video format.
  - Use ~.mkv~ or ~.mp4~ instead.
- Plex doesn't like the audio format.
  - Encode the audio as AAC to be safe.
- You have more than one audio track.
  - Encode only a single track within Handbrake.
- You're playing remotely.
  - All bets are off here. Sometimes it seems to Direct Play, sometimes it
    doesn't. The quality of your connection can affect this.
- You're on a mobile device.
  - Almost certainly Plex is lowering the quality to fit the device. If you have
    a Plex Pass, you can download the media to your device beforehand.
- You're using image-based subtitles.
  - Only use external ~.srt~ subtitles.
- Your ~.srt~ language specification (say, ~.ja.srt~) is for a non-ASCII
  language. Plex detects this and burns them in automatically.
  - Use Chromecast or Plex Web to manage the playback instead.

If you're desperate to stop Plex from transcoding video, you can tell it not to
under ~Settings -> Transcoder~:

[[/assets/images/plex-disable-transcode.jpg]]

Be warned, however, that while playing remotely you might get this funny
message:

[[/assets/images/plex-cpu.jpg]]

** Why do UTF8 characters appear as boxes on my Roku TV?

Roku TVs don't support anything but Latin characters, and there is no way to
install extra fonts yourself. However, if you have a Chromecast, you can instead
cast your media to it via the Plex-Chromecast integration, and the UTF8 will
display correctly. It will also display correctly in Plex Web.

Alternatively, you can choose to force Plex to burn-in the subtitles. This will
inject the UTF8 characters on Plex's end, but will cause Transcoding.

** I added a subtitle file but Plex doesn't see it...

You just need to fresh the metadata for that Library entry:

[[/assets/images/plex-refresh.jpg]]

* Resources

- [[https://support.plex.tv/articles/203810286-what-media-formats-are-supported/][Plex Docs: Supported Plex Media Formats]]
- [[https://support.plex.tv/articles/200250347-transcoder/][Plex Docs: Configuring the Plex Transcoder]]
- [[https://support.plex.tv/articles/200471133-adding-local-subtitles-to-your-media/][Plex Docs: Adding Local Subtitles to your Media]]
- [[https://support.plex.tv/articles/200289306-scanning-vs-refreshing-a-library/][Plex Docs: Scanning vs Refreshing a Library]]
- [[https://forums.plex.tv/t/current-best-video-audio-formats-for-plex-and-roku/61991/7][Plex Forums: Best Formats for Plex and Roku]]
- [[https://forums.plex.tv/t/srt-subtitles-not-detected-in-pms-plex-web-or-showing-in-players/37595][Plex Forums: .srt subtitles not detected]]
- [[https://forums.plex.tv/t/roku-app-sucks-with-srt-subtitles/190378/10][Plex Forums: Roku app sucks with SRT subtitles]]
- [[https://www.reddit.com/r/PleX/comments/cckabs/how_to_get_subtitles_without_transcoding/][Reddit: How to get subtitles without transcoding?]]
- [[https://www.reddit.com/r/PleX/comments/4fkv0r/best_transcoding_settings_in_handbrake_for_plex/][Reddit: Best transcoding settings in Handbrake for Plex?]]
- [[https://www.reddit.com/r/PleX/comments/b7pf86/why_is_the_audio_transcoding/][Reddit: Why is the audio transcoding?]]
- [[https://www.reddit.com/r/PleX/comments/2rilhv/why_is_plex_transcoding_and_how_can_i_make_it_stop/][Reddit: Why is Plex transcoding?]]
- [[https://community.roku.com/t5/Roku-Developer-Program/Arabic-subtitle-just-shows-squares-on-TV/td-p/510386][Roku: Arabic subtitles just show squares on TV]]
- [[https://askubuntu.com/questions/452268/extract-subtitle-from-mkv-files][Stack Exchange: Extracing subtitles from MKV files]]
- [[https://pimylifeup.com/raspberry-pi-plex-server/][How to Set up a Raspberry Pi Plex Server]]
- [[https://subtitletools.com/convert-sub-idx-to-srt-online][Subtitle Conversion Tool]]
- [[https://www.gamasutra.com/blogs/IanHamilton/20150715/248571/How_to_do_subtitles_well__basics_and_good_practices.php][Subtitle Best Practices]]
