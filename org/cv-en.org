#+TITLE: Colin Woodbury
#+AUTHOR: Colin

* Self Introduction

I am a full-stack developer and avid contributor to Open Source since 2012. I am
the author of [[https://github.com/fosskers/aura][Aura]]. As a former teacher, I am skilled at public speaking and
give conference presentations in both English and Japanese.

* Skills

** Programming Languages

- *Low-Level:* Rust, Go, C
- *Functional:* Haskell, Common Lisp, Clojure, Scala
- *Scripting:* Emacs Lisp, Python
- *Web:* HTML, CSS, Web Assembly

** Web Technologies

- Terraform
- GraphQL
- Amazon Web Services, Digital Ocean
- Elastic Search, Kibana
- Docker
- Let's Encrypt

** Other Technologies and Tools

- Linux
- Git, Github, Gitlab
- SQL (SQLite, MySQL, MariaDB, Postgres)
- Apache Spark
- Emacs
- LaTeX
- Geographic Information Systems

* Experience

** Software Development

*** CADDi - Rust Developer

/2022 September - Present/

*** Freelance Software (Rust, Go)

/2020 May - 2022 June/

Private contracting work in a variety of fields and technologies.

*** [[https://www.kadena.io/][Kadena]] - Blockchain Software Development (Haskell)

/2018 August - 2020 May/

Core developer of the [[https://github.com/kadena-io/chainweb-node][Kadena Public Blockchain]].

**** General

- Contributed extensively to the Chainweb and [[https://github.com/kadena-io/pact/][Pact]] projects using Haskell.
- Designed and implemented Chainweb's Difficulty Adjustment algorithm.
- Pioneered Chainweb's mining algorithm and wrote its client, [[https://github.com/kadena-io/chainweb-miner][chainweb-miner]].
- Wrote a [[https://github.com/kadena-community/bag-of-holding][Wallet application]] for the terminal using ~ncurses~.

**** System Administration

- Worked as the main system administrator for Kadena web servers.
- Managed our servers on AWS with Terraform and NixOS.

**** Documentation and Support

- Wrote extensive documentation in both [[https://pact-language.readthedocs.io/ja/stable/][Japanese]] and [[https://pact-language.readthedocs.io/en/stable/][English]].
- Instructed users on configuring our software and helped them debug.
- Represented the company as a speaker at conferences in Japan, the USA, and Canada.

*** [[https://www.azavea.com/][Azavea]] - Open Source Software Developer (Scala)

/2016 May - 2017 December/

Open-source developer on the [[https://github.com/locationtech/geotrellis][GeoTrellis]] project. Author of [[https://github.com/geotrellis/vectorpipe][VectorPipe]].

**** General

- Researched, designed, and implemented GIS algorithms.
- Performed extensive integration tests with Apache Spark.
- Implemented [[https://docs.mapbox.com/vector-tiles/reference/][Mapbox VectorTile]] codecs in [[http://hackage.haskell.org/package/vectortiles][Haskell]] and [[https://github.com/locationtech/geotrellis/tree/master/vectortile][Scala]].

**** System Administration

- Extensive use of Docker and Terraform to manage production systems on AWS.

**** Documentation and Support

- Overhauled the [[https://geotrellis.readthedocs.io/en/latest/][official documentation]] for GeoTrellis.
- [[https://github.com/fosskers/scalaz-and-cats][General advocate]] for Pure Functional Programming in Scala.
- Mentor for [[https://haskellbook.com/][Haskell from First Principles]] weekly reading group.

*** [[https://www.adendamedia.com/][Adenda Media]] - Lead Software Developer (Scala)

/2014 May - 2016 April/

Full-stack Scala developer.

**** General

- Maintained and enhanced a Play + MySQL backend.
- Extended a Twitter Bootstrap-based web application.
- Implemented a content recommendation system using Apache Spark's MLlib.

**** System Administration

- Managed our primary web servers on Digital Ocean.

**** Documentation

- Extensive documentation efforts in LaTeX.

** English Teaching

/2010 August - 2013 July/

English Teacher (ALT) for the Sasebo Board of Education

- Taught English to over a thousand Elementary and Middle School students.
- Created lesson plans, supported Japanese colleagues, and helped grade tests.
- Ran an English Club for students who wanted extra practice.
- Coached students who went on to win a city-wide speech contest two years in a row.

* Education

** Simon Fraser University - Post Bacc. Diploma, Computing Science

/2013 September - 2016 April/

An accelerated undergraduate Diploma program for university graduates.

- Served as Vice President (2014-2015) and as President (2015-2016) of the
  Computing Science Student Society.
- Oversaw the creation of the [[https://github.com/CSSS/old-csss-site][CSSS Website]].
- Served as the president of the SFU Choir for two years.
- Achieved the Dean's Honour Roll two years in a row.

/Requirements completed 2016 April. Diploma awarded 2020 May./

** Saga University, Japan - SPACE Program

/2008 September - 2009 August/

A [[http://www.irdc.saga-u.ac.jp/en/interest/space.html][one-year exchange program]] for international students.

- Member of the Tea Ceremony Club.
- Winner of the year-end Japanese speech contest for Best Speech and Most
  Humorous Speech.

** University of Manitoba - BA, Asian Studies

/2006 September - 2010 April/

A four-year degree, majoring in Asian History and Languages.

- Minored in Computer Science.
- Achieved the Dean's Honour Roll.

* Open Source Projects

| Year | Project              | Role       | Language    | Description                                   |
|------+----------------------+------------+-------------+-----------------------------------------------|
| 2024 | [[https://codeberg.org/fosskers/applying][applying]]             | Author     | Rust        | Apply functions in method position.           |
|      | [[https://codeberg.org/fosskers/nonempty][nonempty]]             | Author     | Common Lisp | Non-empty collections for Common Lisp         |
|      | [[https://codeberg.org/fosskers/filepaths][filepaths]]            | Author     | Common Lisp | Modern, consistent filepath manipulation      |
|      | [[https://git.sr.ht/~fosskers/sly-overlay][sly-overlay]]          | Author     | Emacs Lisp  | Evaluation overlays for Common Lisp in Emacs  |
|------+----------------------+------------+-------------+-----------------------------------------------|
| 2023 | [[https://git.sr.ht/~fosskers/transducers.el][transducers]]          | Author     | Emacs Lisp  | Ergonomic, efficient data processing          |
|      | [[https://git.sr.ht/~fosskers/fn-macro][fn-macro]]             | Author     | Common Lisp | A lambda shorthand for Common Lisp            |
|      | [[https://git.sr.ht/~fosskers/faur][faur]]                 | Author     | Clojure     | Fast data mirror for the AUR (Clojure port)   |
|      | [[https://fosskers.itch.io/falldown][Falldown]]             | Author     | Fennel      | A classic TI-83 game revived                  |
|      | [[https://tic80.com/play?cart=3375][Snake]]                | Author     | Fennel      | A simple implementation of Snake.             |
|      | [[https://github.com/fosskers/nonempty-collections][nonempty-collections]] | Author     | Rust        | Correct-by-construction non-empty collections |
|      | [[https://git.sr.ht/~fosskers/transducers.fnl][transducers]]          | Author     | [[https://fennel-lang.org/][Fennel]]      | Ergonomic, efficient data processing          |
|      | [[https://github.com/fosskers/cl-transducers][transducers]]          | Author     | Common Lisp | Ergonomic, efficient data processing          |
|------+----------------------+------------+-------------+-----------------------------------------------|
| 2022 | [[https://git.sr.ht/~fosskers/faur-supervisor][faur-supervisor]]      | Author     | Elixir      | Data refresh and watchdog for a =faur= server   |
|      | [[https://git.sr.ht/~fosskers/faur][faur]]                 | Author     | Rust        | Fast data mirror for the AUR                  |
|      | [[https://github.com/fosskers/disown][disown]]               | Author     | Rust        | Drop ownership via a method                   |
|      | [[https://crates.io/crates/r2d2-alpm][r2d2-alpm]]            | Author     | Rust        | R2D2 resource pools for ALPM connections      |
|------+----------------------+------------+-------------+-----------------------------------------------|
| 2021 | [[https://www.fosskers.ca/en/tools/love-letter][Love Letter Tracker]]  | Author     | Rust/WASM   | Knowledge tracking tool for /Love Letter/       |
|      | [[https://github.com/fosskers/validated][validated]]            | Author     | Rust        | The cumulative sibling of =Result= and =Either=   |
|      | [[https://github.com/fosskers/streak][streak]]               | Author     | Emacs Lisp  | A minor mode for tracking "streaks"           |
|------+----------------------+------------+-------------+-----------------------------------------------|
| 2020 | [[https://github.com/fosskers/linya][linya]]                | Author     | Rust        | Simple Concurrent Progress Bars               |
|      | [[https://github.com/fosskers/totp][totp]]                 | Author     | Go          | Time-based One-Time Password library          |
|      | [[https://github.com/fosskers/totp-lite][totp-lite]]            | Author     | Rust        | Time-based One-Time Password library          |
|      | [[https://github.com/fosskers/credit][credit]]               | Author     | Rust        | Tool for measuring Github contributions       |
|      | [[https://crates.io/crates/cargo-aur][cargo-aur]]            | Author     | Rust        | Tool to release Rust projects on Arch Linux   |
|      | [[https://crates.io/crates/versions][versions]]             | Author     | Rust        | Rust port of my ~versions~ library              |
|      | [[https://github.com/fosskers/rs-kanji][kanji]]                | Author     | Rust        | Rust port and update of my ~kanji~ library      |
|      | [[https://github.com/fosskers/active][active]]               | Author     | Go          | Tool to keep Github CI Actions up-to-date     |
|      | [[https://hackage.haskell.org/package/skylighting-lucid][skylighting-lucid]]    | Author     | Haskell     | Lucid support for [[https://hackage.haskell.org/package/skylighting][skylighting]]                 |
|      | [[http://hackage.haskell.org/package/org-mode][org-mode]]             | Author     | Haskell     | Parser for Emacs Org Mode files               |
|      | [[https://github.com/kadena-io/chainweb-data][chainweb-data]]        | Core Dev   | Haskell     | Data ingestion tool for Chainweb              |
|------+----------------------+------------+-------------+-----------------------------------------------|
| 2019 | [[https://github.com/kadena-io/chainweb-node][Chainweb]]             | Core Dev   | Haskell     | Multi-chain Proof-of-Work Blockchain          |
|      | [[https://github.com/kadena-community/bag-of-holding][bag-of-holding]]       | Author     | Haskell     | An ncurses terminal wallet for Chainweb       |
|      | [[https://gitlab.com/fosskers/bounded-queue][bounded-queue]]        | Author     | Haskell     | Bounded queue data structure library          |
|      | [[https://github.com/kadena-io/chainweb-miner][chainweb-miner]]       | Author     | Haskell     | A mining client for Chainweb                  |
|      | [[https://github.com/kadena-io/streaming-events][streaming-events]]     | Author     | Haskell     | Client-side consumption of EventStream        |
|------+----------------------+------------+-------------+-----------------------------------------------|
| 2018 | [[https://github.com/fosskers/mapalgebra][MapAlgebra]]           | Author     | Haskell     | Efficient, polymorphic Map Algebra            |
|      | [[https://github.com/fosskers/fosskers.ca][fosskers.ca]]          | Author     | Purescript  | My personal website                           |
|      | [[https://github.com/fosskers/streaming-pcap][streaming-pcap]]       | Author     | Haskell     | Stream packets via libpcap                    |
|      | [[https://github.com/fosskers/servant-xml][servant-xml]]          | Author     | Haskell     | Servant support for XML Content-Type          |
|      | [[https://github.com/haskell-streaming/streaming-attoparsec][streaming-attoparsec]] | Maintainer | Haskell     | Attoparsec integration for ~streaming~          |
|      | [[https://github.com/haskell-streaming/streaming-bytestring][streaming-bytestring]] | Maintainer | Haskell     | Effectful sequences of bytes                  |
|------+----------------------+------------+-------------+-----------------------------------------------|
| 2017 | [[https://github.com/geotrellis/vectorpipe][VectorPipe]]           | Author     | Scala       | VectorTile processing through GeoTrellis      |
|      | [[https://github.com/fosskers/draenor][draenor]]              | Author     | Haskell     | Convert OSM PBF files into ORC format         |
|      | [[https://github.com/fosskers/axe][axe]]                  | Author     | Haskell     | Split large OSM XML files                     |
|      | [[https://github.com/fosskers/streaming-osm][streaming-osm]]        | Author     | Haskell     | Stream OpenStreetMap protobuf data            |
|      | [[https://github.com/fosskers/scalaz-and-cats][scalaz-and-cats]]      | Author     | Scala       | Benchmarks for Scalaz and Cats                |
|      | [[https://github.com/fosskers/scala-benchmarks][scala-benchmarks]]     | Author     | Scala       | Benchmarks for common Scala idioms            |
|------+----------------------+------------+-------------+-----------------------------------------------|
| 2016 | [[https://github.com/locationtech/geotrellis][GeoTrellis]]           | Core Dev   | Scala       | Geographic data batch processing suite        |
|      | [[https://github.com/fosskers/pipes-random][pipes-random]]         | Author     | Haskell     | Producers for handling randomness             |
|      | [[https://github.com/fosskers/vectortiles/][vectortiles]]          | Author     | Haskell     | GIS Vector Tiles, as defined by Mapbox        |
|------+----------------------+------------+-------------+-----------------------------------------------|
| 2015 | [[https://github.com/fosskers/myshroom-api][MyShroom]]             | Core Dev   | Scala       | AI-based image recognition of mushrooms       |
|      | [[https://github.com/fosskers/crypto-classical][crypto-classical]]     | Author     | Haskell     | Samples of classical encrytion schemes        |
|      | [[http://hackage.haskell.org/package/microlens-aeson][microlens-aeson]]      | Author     | Haskell     | Law-abiding lenses for Aeson                  |
|      | [[https://github.com/fosskers/opengl-linalg][opengl-linalg]]        | Author     | C           | OpenGL-friendly Linear Algebra                |
|      | [[https://github.com/fosskers/tetris][Tetris]]               | Author     | C           | A 3D Tetris game using OpenGL                 |
|      | [[https://gitlab.com/fosskers/versions][versions]]             | Author     | Haskell     | Types and parsers for software versions       |
|------+----------------------+------------+-------------+-----------------------------------------------|
| 2014 | [[https://github.com/fosskers/elm-touch][elm-touch]]            | Author     | Elm         | Extended Touch library for Elm                |
|      | [[https://github.com/fosskers/2048][2048 Game]]            | Author     | Elm         | The 2048 game in Elm ([[http://fosskers.github.io/2048/][play]])                   |
|------+----------------------+------------+-------------+-----------------------------------------------|
| 2013 | [[https://github.com/fosskers/hisp][Hisp]]                 | Author     | Haskell     | A simple Lisp                                 |
|------+----------------------+------------+-------------+-----------------------------------------------|
| 2012 | [[https://github.com/aurapm/aura/][Aura]]                 | Author     | Haskell     | Package Manager for Arch Linux                |
|      | [[https://github.com/fosskers/kanji][kanji]]                | Author     | Haskell     | Analyse Japanese Kanji                        |
|------+----------------------+------------+-------------+-----------------------------------------------|
| 2011 | [[https://github.com/fosskers/sudoku][Sudoku]]               | Author     | Python      | A sudoku solver                               |
|      | [[https://github.com/fosskers/tgrep][tgrep]]                | Author     | Python      | A search tool for Reddit's log files          |
|------+----------------------+------------+-------------+-----------------------------------------------|

* Certification

| Certification                                 | Level | Year |
|-----------------------------------------------+-------+------|
| Goethe-Zertifikat German Language Proficiency | B1    | 2015 |
| Japanese Kanji Proficiency Test               | 2     | 2024 |
| Japanese Language Proficiency Test            | N1    | 2012 |

* Talks and Presentations

| Topic                          | Date      | Venue                    | Location  | Language |
|--------------------------------+-----------+--------------------------+-----------+----------|
| Fortran and Doom Emacs         | 2022 Feb  | DoomConf                 | Online    | English  |
| Terminal Progress Bars in Rust | 2021 Feb  | Vancouver Rust Meetup    | Vancouver | English  |
| [[https://www.youtube.com/watch?v=CmMzkOspHTU][Haskell in Production]]          | 2019 June | LambdaConf               | Boulder   | English  |
| Beauty and Correctness in Code | 2019 May  | Polyglot Unconference    | Vancouver | English  |
| Pact Basics                    | 2018 Nov  | NODE Tokyo               | Tokyo     | Japanese |
| Introduction to Chainweb       | 2018 Nov  | Neutrino Meetup          | Tokyo     | Japanese |
| [[https://www.youtube.com/watch?v=-UEOLfyDi74][How not to Write Slow Scala]]    | 2018 June | LambdaConf               | Boulder   | English  |
| Tips on Scala Performance      | 2018 May  | Polyglot Unconference    | Vancouver | English  |
| [[https://www.meetup.com/Vancouver-Haskell-Unmeetup/events/229599314/][Extensible Effects]]             | 2016 Apr  | Vancouver Haskell Meetup | Vancouver | English  |
| [[https://www.meetup.com/Vancouver-Haskell-Unmeetup/events/170696382/][Applicative Functors]]           | 2014 Apr  | Vancouver Haskell Meetup | Vancouver | English  |
| Thoughts on Japanese Education | 2012 Feb  | Arkas Sasebo             | Sasebo    | Japanese |

* Hobbies

** Climbing

I prefer Lead Climbing, but also do Top Rope and Bouldering both outdoors and
indoors.

*** Competition Record

| Year | Sport      | Competition               | Venue          |
|------+------------+---------------------------+----------------|
| 2020 | Top Rope   | The Flash                 | Cliffhanger    |
| 2018 | Bouldering | BC Bouldering Provincials | North Van Hive |

** Language Learning

I specialize in Japanese, but have also studied German, Italian, and Esperanto.

** Music

| Group                             | Date                    | Position      |
|-----------------------------------+-------------------------+---------------|
| [[https://youtu.be/lpKgWtiKcQo][VVGO: FF7 Opening Bombing Mission]] | 2024 March              | Electric Bass |
| [[https://www.embassy-choir.org/en/][Tokyo Embassy Choir]]               | 2022 Fall - Ongoing     | Voice         |
| [[https://www.youtube.com/watch?v=oOgi0EZTXEg][VVGO: Skyword Sword]]               | 2022 Summer             | Electric Bass |
| SFU Choir                         | 2019 Fall               | Voice         |
| SFU Choir                         | 2013 Fall - 2016 Spring | Voice         |
| Haiki PTA Chorus                  | 2010 - 2013             | Voice         |
| Westwood Collegiate Jazz Band     | 2002 Fall - 2006 Spring | Tenor Sax     |

*** Performances

- TEC: [[https://www.youtube.com/playlist?list=PLQT_8TGvdSoikLLkHrIuilVSk2RUctYep][2023 Christmas]]
- TEC: [[https://www.youtube.com/playlist?list=PLQT_8TGvdSogKMnBNypS_hjXht6Y8Lqbu][2023 November]] (with orchestra)
- TEC: [[https://www.youtube.com/playlist?list=PLQT_8TGvdSohLr99nRRk8V3PtFImsoZjH][2023 Summer]]
- TEC: [[https://www.youtube.com/playlist?list=PLQT_8TGvdSogGzlvz-QBuE21jLUmJ1X-U][2022 Christmas]]
